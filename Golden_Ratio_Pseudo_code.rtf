{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww38200\viewh21600\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Algorithm Golden-Section Search(f, a, b, tolerance)\
  Input: f (function to minimize), a (lower interval bound), b (upper interval bound), tolerance (convergence criterion)\
  Output: x_min (approximation of the point where f attains its minimum in the interval [a, b])\
\
  1. Define \uc0\u964  = (sqrt(5) - 1) / 2\
  2. Initialize x1 = b - \uc0\u964  * (b - a)\
  3. Initialize x2 = a + \uc0\u964  * (b - a)\
  4. Compute f1 = f(x1)\
  5. Compute f2 = f(x2)\
\
  6. While (b - a) > tolerance do:\
        a. If f1 > f2 then:\
              i. Set a = x1\
             ii. Set x1 = x2\
            iii. Set x2 = b - \uc0\u964  * (b - a)\
             iv. Compute f1 = f2\
              v. Compute f2 = f(x2)\
        b. Else:\
              i. Set b = x2\
             ii. Set x2 = x1\
            iii. Set x1 = a + \uc0\u964  * (b - a)\
             iv. Compute f2 = f1\
              v. Compute f1 = f(x1)\
\
  7. Set x_min = (a + b) / 2 (or choose the point x1 or x2 with the lower function value)\
\
  8. Return x_min\
\
End Algorithm\
}